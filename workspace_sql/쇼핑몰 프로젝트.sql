# 도서 쇼핑몰 프로젝트 테이블

# 5. 장바구니 테이블

# 1. 회원 테이블
CREATE TABLE SHOP_MEMBER (
	MEM_ID VARCHAR(20) PRIMARY KEY
	, MEM_PW VARCHAR(20) NOT NULL
	, MEM_NAME VARCHAR(20) NOT NULL
	, MEM_TEL VARCHAR(20)                          # 010-1111-2222
	, MEM_ADDR VARCHAR(50)
	, ADDR_DETAIL VARCHAR(50)
	, MEM_EMAIL VARCHAR(50) UNIQUE
	, MEM_ROLE VARCHAR(10) NOT NULL DEFAULT 'USER' # ADMIN, USER
	, JOIN_DATE DATETIME DEFAULT SYSDATE()
);

SELECT *
FROM shop_member;

# 2. 도서 카테고리 테이블
CREATE TABLE BOOK_CATEGORY(
	CATE_NUM INT PRIMARY KEY AUTO_INCREMENT
	, CATE_NAME VARCHAR(20) NOT NULL UNIQUE
);

INSERT INTO BOOK_CATEGORY VALUES (1, '소설');
INSERT INTO BOOK_CATEGORY VALUES (2, '인터넷/IT');
INSERT INTO BOOK_CATEGORY VALUES (3, '자기계발');

# 3. 도서 테이블
CREATE TABLE book(
	BOOK_NUM INT PRIMARY KEY AUTO_INCREMENT
	, TITLE VARCHAR(20) NOT NULL
	, PUBLISHER VARCHAR(20) NOT NULL
	, PRICE INT NOT NULL
	, REG_DATE DATETIME DEFAULT SYSDATE() # 쇼핑몰에 상품 등록한 날짜
	, BOOK_INTRO VARCHAR(50)
	, CATE_NUM INT REFERENCES BOOK_CATEGORY (CATE_NUM)
);

SELECT *
FROM book;

# 3. 도서 이미지 정보 테이블
CREATE TABLE BOOK_IMG (
	IMG_NUM INT PRIMARY KEY AUTO_INCREMENT
	, ORIGIN_IMG_NAME VARCHAR(100) # 원본 파일명
	, ATTACHED_IMG_NAME VARCHAR(100) # 첨부된 파일명
	, BOOK_NUM INT REFERENCES book (BOOK_NUM) ON DELETE CASCADE # 이미지의 원본 도서 번호
	, IS_MAIN VARCHAR(3) # 메인이미지면 : 'Y', 서브이미지 : 'N'
);

# 4. 장바구니 테이블

CREATE TABLE SHOP_CART (
	CART_NUM INT PRIMARY KEY AUTO_INCREMENT
	, BOOK_NUM INT REFERENCES book (BOOK_NUM)
	, CART_CNT INT NOT NULL # 장바구니에 담은 도서 수량
	, MEM_ID VARCHAR(20) REFERENCES shop_member (MEM_ID)
	, TOTAL_PRICE INT NOT NULL
	, CART_DATE DATETIME DEFAULT SYSDATE()
);

INSERT INTO shop_cart(
	BOOK_NUM
	, CART_CNT
	, MEM_ID
	, TOTAL_PRICE
) VALUES(
	1
	, 2
	, 'user'
	, (SELECT PRICE 
		FROM book 
		WHERE BOOK_NUM = 5) * 3
);

SELECT * FROM shop_cart;

SELECT CART_NUM
	, C.BOOK_NUM
	, TITLE
	, PRICE
	, CART_CNT
	, TOTAL_PRICE
	, CART_DATE
FROM shop_cart C
INNER JOIN book B
ON B.BOOK_NUM = C.BOOK_NUM
WHERE MEM_ID = 'USER'
ORDER BY CART_DATE DESC;

#BOOK_IMG 테이블에 데이터 추가
INSERT INTO book_img (ORIGIN_IMG_NAME, ATTACHED_IMG_NAME, BOOK_NUM, IS_MAIN)
VALUES ('abc.jpg', 'aaa-bbb.jpg', 1, 'Y')
, ('abc.jpg', 'aaa-bbb.jpg', 1, 'Y')
, ('abc.jpg', 'aaa-bbb.jpg', 1, 'Y');

SELECT *
FROM book_img;

# 다음에 들어갈 book_num을 조회(최대 book_num  + 1)
SELECT IFNULL(MAX(BOOK_NUM), 0) + 1 FROM book;

SELECT B.BOOK_NUM
	, TITLE
	, PRICE
	, ATTACHED_IMG_NAME
FROM book B
INNER JOIN book_img I
ON B.BOOK_NUM = I.BOOK_NUM
WHERE IS_MAIN = 'Y';


SELECT B.BOOK_NUM
   , TITLE
   , PUBLISHER
   , PRICE
   , BOOK_INTRO
   , ATTACHED_IMG_NAME
FROM book B
INNER JOIN BOOK_IMG I
ON B.BOOK_NUM = I.BOOK_NUM
WHERE B.BOOK_NUM = 2;
